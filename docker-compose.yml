services:
  app:
    build: .
    container_name: app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_started
    environment:
      - DB_HOST=postgres
      - DB_PORT=${POSTGRES_PORT}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
      - SERVER_PORT=${SERVER_PORT}
    networks:
      - hr-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  migrate:
    image: migrate/migrate:latest
    container_name: migrate
    command: ["-path", "/migrations", "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable", "up"]
    volumes:
      - ./migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hr-network

networks:
  hr-network:
    driver: bridge

volumes:
  postgres_data: 